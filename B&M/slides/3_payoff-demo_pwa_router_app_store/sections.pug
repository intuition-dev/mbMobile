
.section1.section
	.cont
		H4 Other ways to do data binding.
		img(src='1dt.png')

.section2.section
	.cont
		H3 And .js frameworks. .js is 3GL.
		img(src='2js.png')
		H2 About 18 month half life, current fashion is Vue.

.section3.section
	.cont
.section1.section
	.cont
		H4 Example PWA. AND Cross-platform for AppStore
		video(controls='', muted='', autoplay='')
			source(src='0arc.mp4', type='video/mp4')
		H4 Start with deployed Web App, that is SPA.

.section2.section
	.cont
		H3 It is fast enough for some games
		img(src='1game.png')

.section2.section
	.cont
		H3 Break up the app into layout, app shell(index) and parts.
		img(src='1app_shell.png')

.section3.section
	.cont
		H3 You'll need a router.
		img(src='2turbo.png')
		H4 Examples are our meta-router

.section4.section
	.cont
		H3 App Shell
		img(src='3router.png')
		H4 If you are not PWA going to Cross-platform - you don't need a router.

// ////////////////////////////////////////////////////////////

.section2.section
	.cont
		H3 Router lets you have SPA events.
		img(src='4fx.png')

.section3.section
	.cont
		H3 PWA benefit
		img(src='5app_store.jpg')

.section4.section
	.cont
		H3 Once you have SPA deployed:
		img(src='6phonegap.png')

.section4.section
	.cont
		H3 But in the cloud. Take one for the team.
		img(src='7osx.png')

.sectionq.section
	.cont
		H3 On device ready { }
		img(src='8device.png')
		H4 But after you have SPA.

.section3.section
	.cont
		include:marked aMORE.md

		H3 Some would say it is a fad
		img(src='3full.jpg')

.section4.section
	.cont
		H3 But there are dev. that know more than one.
		img(src='3poly.png')
		H2 If you look close, bottom right; RIOT.js is DOM! We can Pug.

// /////////////////////////////////////////////////////////
.section1.section
	.cont
		H2 In 90 seconds I'll teach you RIOT.js.org data binding
		img(src='4tag.png')
		H4 In pug

.section2.section
	.cont
		H3 Compile the pug ( notice it looks like React, but easy to build)
		img(src='4tagjs.png')
		H4 Via riot-cli or: nbake -t .

.section3.section
	.cont
		H3 Import the .js in page
		img(src='5page.png')
		H3 mount, and call the method. THE END of 90 seconds.

.section4.section
	.cont
		H3 Why write REST, Cache, Ajax/fetch()? Say no to CRUD.
		img(src='6rest.png')
		H2 Looks like 3gl.

// /////////////////////////////////////////////////////////
.section1.section
	.cont
		H2 In 90 seconds I'll teach you RIOT.js.org data binding
		img(src='4tag.png')
		H4 In pug

.section2.section
	.cont
		H3 Compile the pug ( notice it looks like React, but easy to build)
		img(src='4tagjs.png')
		H4 Via riot-cli or: nbake -t .

.section3.section
	.cont
		H3 Import the .js in page
		img(src='5page.png')
		H3 mount, and call the method. THE END of 90 seconds.

.section4.section
	.cont
		H3 Why write REST, CRUD, Cache, Ajax/fetch()?
		img(src='6rest.png')
		H2 Don't! Looks like 3gl.

.section1.section
	.cont
		H2 You can call an DB API from browser.
		img(src='7fire_store.png')
		H4 And bind in a tag.

.section2.section
	.cont
		H3 Test the tag (that black-boxes data binding )
		img(src='8qunit.jpg')
		H4 so that even a designer can use it in a page. A bit like DSL for your UX.

.section3.section
	.cont
		include:marked aMORE.md
