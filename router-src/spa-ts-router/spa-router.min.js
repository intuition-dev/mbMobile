// mB v5.04.26 on 2019-04-24T22:42:06.359Z
var SPArouter = function() {
 function SPArouter() {}
 return SPArouter.loadHtml = function(toHref, fromHref, back_) {
  if (!back_) {
   try {
    history.pushState({
     url: toHref
    }, '', toHref);
   } catch (err) {}
  }
  SPArouter.disE({
   type: SPArouter.NavSTART,
   toHref: toHref,
   fromHref: fromHref,
   back: back_
  });
  var url = SPArouter.appendQueryString(toHref, {
   SPArouter: "\"" + SPArouter.zone + "\""
  });
  axios.get(url).then(function(txt) {
   var $html = $('<html></html>').append($(txt.data)), title = $html.find('title').first().text();
   document.title = title;
   var newContent = $html.find(SPArouter.zone).html();
   SPArouter.disE({
    type: SPArouter.NavDONE,
    toHref: toHref,
    fromHref: fromHref,
    newContent: newContent,
    $html: $html,
    back: back_
   });
  }).catch(function(er) {
   SPArouter.disE({
    type: SPArouter.ERR,
    err: er
   });
  });
 }, SPArouter.appendQueryString = function(url, queryVars) {
  var firstSeparator = -1 == url.indexOf('?') ? '?' : '&', queryStringParts = new Array();
  for (var key in queryVars) {
   try {
    queryStringParts.push(key + '=' + queryVars[key]);
   } catch (err) {}
  }
  return url + firstSeparator + queryStringParts.join('&');
 }, SPArouter.disE = function(msg) {
  dispatchEvent(new CustomEvent('nav', {
   detail: msg
  }));
 }, SPArouter.fROOTfix = function() {
  var fROOT = location.toString().replace(location.search, ''), ii = fROOT.lastIndexOf(':');
  fROOT = fROOT.substring(ii + 1);
  var isFile = 'file:' == window.location.protocol;
  isFile && (fROOT = fROOT.slice(0, -11)), isFile ? $('a').each(function(index, value) {
   $(this).attr('href', this.href.replace('/fROOT', fROOT)), '/' == this.href.slice(-1) ? $(this).attr('href', this.href + 'index.html') : $(this).attr('href', this.href + '/index.html');
  }) : $('a').each(function(index, value) {
   $(this).attr('href', this.href.replace('/fROOT', ''));
  });
 }, SPArouter.init = function(foo) {
  addEventListener('nav', foo), $(window).on('popstate', function(e) {
   var state = e.originalEvent.state;
   if (null !== state) {
    e.preventDefault();
    var oldUrl = sessionStorage.getItem('oldUrl');
    sessionStorage.setItem('oldUrl', state.url), SPArouter.loadHtml(state.url, oldUrl, !0);
   }
  }), $(document).on('click', 'a', function(e) {
   var anchor = $(e.currentTarget), href = anchor.prop('href');
   if (href && !(href.length < 1) && !anchor.is('.norouter')) {
    e.preventDefault();
    var fromHref = window.location.href;
    sessionStorage.setItem('oldUrl', href), SPArouter.loadHtml(href, fromHref, null);
   }
  });
  var pg = window.location.href;
  try {
   history.pushState({
    url: pg
   }, '', pg);
  } catch (err) {}
  sessionStorage.setItem('oldUrl', pg);
 }, SPArouter.zone = '#router', SPArouter.NavSTART = '_nav-start', SPArouter.NavDONE = '_nav-loaded', 
 SPArouter.ERR = '_nav-ERR', SPArouter;
}();